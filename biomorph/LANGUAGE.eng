/*	Commonwealth English localization.

	Some notes:

	- Indented in hopes that your text editor of choice provides folding (YMMV).
	- Many of these strings are predefined instead of generated algorithmically due
	to a need for different indefinite articles (a/an); I don't know of a programmatic
	solution which doesn't break when moved from English to, for instance, French.
	- Don't be surprised if an internal name doesn't line up with a flavour name.
	- Color escape codes often get substituted at runtime.
	- Yes, I am a fiend for coloured text.
*/

[eng default]

	BIO_MODTITLE = "Biomorph";

// Health //////////////////////////////////////////////////////////////////////

	BIO_HEALTHBONUS_TAG = "Health Flask";
	BIO_HEALTHBONUS_PKUP = "Drank the contents of a health flask.";
	BIO_HEALTHBONUS_COLLECTED = "Didn't pick up a Health Flask, but counted it as collected.";
	BIO_STIMPACK_TAG = "Stimpack";
	BIO_STIMPACK_PKUP = "Used a stimpack.";
	BIO_STIMPACK_PARTIAL = "Partially used a stimpack.";
	BIO_STIMPACK_PKUPLOW = "Used a badly-needed stimpack.";
	BIO_MEDIKIT_TAG = "First-Aid Kit";
	BIO_MEDIKIT_PKUP = "Used a first-aid kit.";
	BIO_MEDIKIT_PARTIAL = "Partially used a first-aid kit.";
	BIO_MEDIKIT_PKUPLOW = "Used a badly-needed first-aid kit.";
	BIO_SOULSPHERE_TAG = "Soulsphere";
	BIO_SOULSPHERE_PKUP = "Absorbed a Soulsphere.";
	BIO_SOULSPHERE_PARTIAL = "Partially absorbed a Soulsphere.";
	BIO_SOULSPHERE_PKUPLOW = "Absorbed a much-needed Soulsphere.";
	BIO_SOULSPHERE_COLLECTED = "Didn't pick up a Soulsphere, but counted it as collected.";

// Armour //////////////////////////////////////////////////////////////////////

	BIO_ARMORBONUS_TAG = "Armour Shard";
	BIO_ARMORBONUS_PKUP = "Jury-rigged some protection using an armour shard.";
	BIO_ARMORBONUS_COLLECTED = "Didn't pick up an Armour Shard, but counted it as collected.";

	BIO_LIGHTARMOR_TAG = "Security Vest";
	BIO_LIGHTARMOR_PKUP = "Picked up and donned a security vest.";
	BIO_LIGHTARMOR_PARTIAL = "Repaired your worn armour by scavenging a security vest.";

	BIO_HEAVYARMOR_TAG = "Combat Rig";
	BIO_HEAVYARMOR_PKUP = "Picked up and donned a combat rig.";
	BIO_HEAVYARMOR_PARTIAL = "Repaired your worn armour by scavenging a combat rig.";

// Ammo ////////////////////////////////////////////////////////////////////////

	BIO_CLIP_TAG = "Magazine";
	BIO_CLIP_PKUP = "Picked up a bullet magazine.";
	BIO_CLIP_PARTIAL = "Partially emptied a bullet magazine.";
	BIO_CLIPBOX_TAG = "Bullet Box";
	BIO_CLIPBOX_PKUP = "Picked up a bullet box.";
	BIO_CLIPBOX_PARTIAL = "Partially emptied a bullet box.";
	BIO_SHELL_TAG = "Shotshells";
	BIO_SHELL_PKUP = "Picked up a handful of shotshells.";
	BIO_SHELL_PARTIAL = "Picked up part of a handful of shotshells.";
	BIO_SHELLBOX_TAG = "Shell Box";
	BIO_SHELLBOX_PKUP = "Picked up a box of shotshells.";
	BIO_SHELLBOX_PARTIAL = "Partially emptied a box of shotshells.";
	BIO_ROCKETAMMO_TAG = "Rocket";
	BIO_ROCKETAMMO_PKUP = "Picked up a rocket.";
	BIO_ROCKETBOX_TAG = "Rocket Box";
	BIO_ROCKETBOX_PKUP = "Picked up a rocket box.";
	BIO_ROCKETBOX_PARTIAL = "Partially emptied a rocket box.";
	BIO_CELL_TAG = "Energy Cell";
	BIO_CELL_PKUP = "Picked up an energy cell.";
	BIO_CELL_PARTIAL = "Partially drained an energy cell.";
	BIO_CELLPACK_TAG = "Energy Cell Pack";
	BIO_CELLPACK_PKUP = "Picked up an energy cell pack.";
	BIO_CELLPACK_PARTIAL = "Partially drained an energy cell pack.";

	BIO_BACKPACK_TAG = "Backpack";
	BIO_BACKPACK_PKUP = "Obtained a backpack full of ammo.";
	BIO_BACKPACK_OVERFLOW = "Left some excess ammo behind from a backpack.";

// Powerups ////////////////////////////////////////////////////////////////////

	BIO_BERSERK_TAG = "Berserk Cocktail";
	BIO_BERSERK_PKUP = "Injected a berserk cocktail.";
	BIO_BERSERK_PKUPFIRST = "Used a berserk cocktail's enhancers, but left the healers.";
	BIO_BERSERK_PKUPLOW = "Injected a badly-needed berserk cocktail.";
	BIO_BERSERK_COLLECTED = "Didn't use a berserk cocktail, but marked it as collected.";
	BIO_BERSERK_PARTIAL = "Injected part of a berserk cocktail.";

	BIO_ALLMAP_TAG = "Computer Area Map";
	BIO_ALLMAP_PKUP = "Obtained a computer area map; your surroundings become clear.";
	BIO_BLURSPHERE_TAG = "Blursphere";
	BIO_BLURSPHERE_PKUP = "Absorbed a blursphere; you fade and shimmer.";
	BIO_INVULNSPHERE_TAG = "Invulnerability Sphere";
	BIO_INVULNSPHERE_PKUP = "Absorbed an invulnerability sphere! You are irrepressible!";
	BIO_INFRARED_TAG = "Light-Amp Visor";
	BIO_INFRARED_PKUP = "Donned a light amplification visor; the dark is illuminated.";
	BIO_MEGASPHERE_TAG = "Megasphere";
	BIO_MEGASPHERE_PKUP = "Absorbed a Megasphere! You feel rejuvenated.";
	BIO_MEGASPHERE_COLLECTED = "Didn't absorb a Megapshere, but marked it as collected.";
	BIO_RADSUIT_TAG = "N.B.C. Suit";
	BIO_RADSUIT_PKUP = "Donned an N.B.C. suit; you're safe from environmental hazards.";

// Weapon details (readouts) ///////////////////////////////////////////////////

	BIO_WEAP_DESC_HSPREAD =
		"\c[MidGrey]Horizontal spread: %s%.2f \c[MidGrey]degree(s)";
	BIO_WEAP_DESC_VSPREAD =
		"\c[MidGrey]Vertical spread: %s%.2f \c[MidGrey]degree(s)";
	BIO_WEAP_DESC_FIRETIME =
		"\c[MidGrey]Fire time: %s%.2f \c[MidGrey]seconds";
	BIO_WEAP_DESC_ATTACKTIME =
		"\c[MidGrey]Attack time: %s%.2f \c[MidGrey]seconds";
	BIO_WEAP_DESC_RELOADTIME =
		"\c[MidGrey]Reload time: %s%.2f \c[MidGrey]seconds";

	BIO_FIREFUNC_GENERAL =
		"\c[MidGrey]Fires %s%d %s%s";
	BIO_FIREFUNC_MELEE =
		"\c[MidGrey]Hits %s%d time(s)";
	BIO_FIREFUNC_PUNCH =
		"\c[MidGrey]Throws a punch";
	BIO_FIREFUNC_KICK =
		"\c[MidGrey]Swing kick";
	BIO_FIREFUNC_SAW =
		"\c[MidGrey]Cuts continually";
	BIO_FIREFUNC_RAIL =
		"\c[MidGrey]Fires %s%d\c[MidGrey] %s%s, "
		"spawning %s%s \c[MidGrey]along the trajectory";
	BIO_FIREFUNC_RAIL_NOPUFF =
		"\c[MidGrey]Fires %s%d\c[MidGrey] rail shots, "
		"spawning %s%s \c[MidGrey]along the trajectory";
	BIO_FIREFUNC_RAIL_NOSPAWN =
		"\c[MidGrey]Fires %s%d\c[MidGrey] %s%s";
	BIO_FIREFUNC_RAIL_NOTHING =
		"\c[MidGrey]Fires %s%d\c[MidGrey] rail shots";
	BIO_FIREFUNC_BFGSPRAY =
		"\c[MidGrey]Fires %s%d \c[MidGrey]BFG rays";

	BIO_DMGFUNC_RAND =
		"\c[MidGrey]Damage: %s%d\c[MidGrey] \cu-\c[MidGrey] %s%d";
	BIO_DMGFUNC_1DX =
		"\c[MidGrey]Damage: %s%d\c[MidGrey] x (1 - %d)";
	BIO_DMGFUNC_XTIMESRAND =
		"\c[MidGrey]Damage: %s%d \c[MidGrey]x (%s%d \c[MidGrey]- %s%d\c[MidGrey])";
	BIO_DMGFUNC_XPLUS1D3 =
		"\c[MidGrey]Damage: %s%d \c[MidGrey]+ (1 - 3)";
	BIO_DMGFUNC_RANDOMPICK =
		"\c[MidGrey]Damage: \c[MidGrey](";
	BIO_DMGFUNC_SINGLE =
		"\c[MidGrey]Damage: %s%d";
	BIO_DMGFUNC_NOOP =
		"\c[MidGrey]Deals no direct hit damage";

// Weapons (tags, obituaries, pickup strings) //////////////////////////////////

	BIO_WEAP_TAG = "Weapon";
	BIO_WEAP_OB = "%k killed %o.";
	BIO_WEAP_PKUP = "Procured some kind of weapon.";

	BIO_FISTS_TAG = "Fists";

	// (None of the handguns or melee weapons have scavenge messages)

	BIO_ARCCASTER_TAG = "Arc Caster";
	BIO_ARCCASTER_PKUP = "Procured an %s.";
	BIO_ARCCASTER_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_ARCCASTER_OB = "%k electrocuted %o with an %s.";
	BIO_ARCCASTER_SUMM =
		"\c[White]Medium-range, monster-penetrating electric arc\n"
		"\c[White]Feeds from cell reserves\n"
		"\c[White]Very high rate-of-fire";

	BIO_AUTOSHOTGUN_TAG = "Auto Shotgun";
	BIO_AUTOSHOTGUN_PKUP = "Procured an %s.";
	BIO_AUTOSHOTGUN_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_AUTOSHOTGUN_OB = "%k ploughed %o down with an %s.";
	BIO_AUTOSHOTGUN_SUMM =
		"\c[White]High rate-of-fire\n"
		"\c[White]Same accuracy as the Pump Shotgun\n"
		"\c[White]8-round magazine, long reload time";

	BIO_BFG_TAG = "BFG9000";
	BIO_BFG_PKUP = "Procured a %s.";
	BIO_BFG_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_BFG_OB = "%k field-tested a %s on %o.";

	BIO_BREACHINGAXE_TAG = "Breaching Axe";
	BIO_BREACHINGAXE_PKUP = "Procured a %s.";
	BIO_BREACHINGAXE_OB = "%k hewed %o with a %s.";

	BIO_CHAINSAW_TAG = "Chainsaw";
	BIO_CHAINSAW_PKUP = "Procured a %s.";
	BIO_CHAINSAW_OB = "%k sawed %o in half with a %s.";

	BIO_COACHGUN_TAG = "Coachgun";
	BIO_COACHGUN_PKUP = "Procured a %s.";
	BIO_COACHGUN_OB = "%k cut %o down with a %s.";
	BIO_COACHGUN_SCAV = "Scavenged ammo from a dropped %s.";

	BIO_MACHINEGUN_TAG = "Machine Gun";
	BIO_MACHINEGUN_PKUP = "Procured a %s.";
	BIO_MACHINEGUN_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_MACHINEGUN_OB = "%k gunned %o down with a %s.";
	BIO_MACHINEGUN_SUMM =
		"\c[White]High rate-of-fire\n"
		"\c[White]100-round magazine\n"
		"\c[White]Same rate-of-fire as the Microvulcan, but more accurate";

	BIO_MICROVULCAN_TAG = "Microvulcan";
	BIO_MICROVULCAN_PKUP = "Procured a %s.";
	BIO_MICROVULCAN_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_MICROVULCAN_OB = "%k shredded %o with a %s.";
	BIO_MICROVULCAN_SUMM =
		"\c[White]High rate-of-fire\n"
		"\c[White]Feeds from bullet reserves";

	BIO_MINIVULCAN_TAG = "Minivulcan";
	BIO_MINIVULCAN_PKUP = "Procured a %s.";
	BIO_MINIVULCAN_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_MINIVULCAN_OB = "%k honeycombed %o with a %s.";
	BIO_MINIVULCAN_SUMM =
		"\c[White]High rate-of-fire\n"
		"\c[White]Significantly more damaging than Microvulcan\n"
		"\c[White]Feeds from bullet reserves";

	BIO_PLASMARIFLE_TAG = "Plasma Rifle";
	BIO_PLASMARIFLE_PKUP = "Procured a %s.";
	BIO_PLASMARIFLE_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_PLASMARIFLE_OB = "%k burned %o with a %s.";

	BIO_PUMPSHOTGUN_TAG = "Pump Shotgun";
	BIO_PUMPSHOTGUN_PKUP = "Procured a %s.";
	BIO_PUMPSHOTGUN_OB = "%k wasted %o with a %s.";
	BIO_PUMPSHOTGUN_SCAV = "Scavenged ammo from a dropped %s.";

	BIO_ROCKETAUTOLAUNCHER_TAG = "Rocket Auto-Launcher";
	BIO_ROCKETAUTOLAUNCHER_PKUP = "Procured a %s.";
	BIO_ROCKETAUTOLAUNCHER_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_ROCKETAUTOLAUNCHER_OB = "%k blew %o away with a %s.";

	BIO_SERVICEPISTOL_TAG = "Service Pistol";
	BIO_SERVICEPISTOL_PKUP = "Procured a %s.";
	BIO_SERVICEPISTOL_OB = "%k served %o summary execution with a %s.";
	BIO_SERVICEPISTOL_SUMM =
		"\c[White]Magazine-fed with infinite ammo reserve\n"
		"\c[White]Mid-high rate-of-fire\n"
		"\c[White]Accurate";

	BIO_TURBOVULCAN_TAG = "Turbovulcan";
	BIO_TURBOVULCAN_PKUP = "Procured a %s.";
	BIO_TURBOVULCAN_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_TURBOVULCAN_OB = "%k perforated %o with a %s.";
	BIO_TURBOVULCAN_SUMM =
		"\c[White]Very high rate-of-fire\n"
		"\c[White]Requires spooling before firing\n"
		"\c[White]Feeds from bullet reserves";

	BIO_VOLLEYGUN_TAG = "Volley Gun";
	BIO_VOLLEYGUN_PKUP = "Procured a %s.";
	BIO_VOLLEYGUN_SCAV = "Scavenged ammo from a dropped %s.";
	BIO_VOLLEYGUN_OB = "%k gave %o a three-course meal of lead with a %s.";

	// Dual-wield weapons

	BIO_DUALMACHINEGUN_TAG = "Mirrored Machine Guns";
	BIO_DUALMACHINEGUN_PKUP = "Procured a pair of %s.";
	BIO_DUALMACHINEGUN_SCAV = "Scavenged ammo from a dropped pair of %s.";
	BIO_DUALMACHINEGUN_OB = "%k gunned %o down with a pair of %s.";

// Payloads (puff/projectile tags, functor summaries) //////////////////////////

	// Generic tags used as defaults
	BIO_ROUND_TAG = "round";
	BIO_ROUND_TAGS = "rounds";

	BIO_MELEEHIT_TAG = "hit";
	BIO_MELEEHIT_TAG_PLURAL = "hits";

	BIO_BULLET_TAG = "bullet";
	BIO_BULLET_TAG_PLURAL = "bullets";

	BIO_SHOTPELLET_TAG = "pellet";
	BIO_SHOTPELLET_TAG_PLURAL = "pellets";

	BIO_SLUG_TAG = "slug";
	BIO_SLUG_TAG_PLURAL = "slugs";

	BIO_DEMOBULLET_TAG = "demolition bullet";
	BIO_DEMOBULLET_TAG_PLURAL = "demolition bullets";

	BIO_DEMOSHOTPELLET_TAG = "demolition shot pellet";
	BIO_DEMOSHOTPELLET_TAG_PLURAL = "demolition shot pellets";

	BIO_DEMOSLUG_TAG = "demolition slug";
	BIO_DEMOSLUG_TAG_PLURAL = "demolition slugs";

	BIO_ELECTRICPUFF_TAG = "electric arc";
	BIO_ELECTRICPUFF_TAG_PLURAL = "electric arcs";

	BIO_ROCKET_TAG = "rocket";
	BIO_ROCKET_TAG_PLURAL = "rockets";

	BIO_GRENADE_TAG = "grenade";
	BIO_GRENADE_TAG_PLURAL = "grenades";

	BIO_MINIMISSILE_TAG = "mini-missile";
	BIO_MINIMISSILE_TAG_PLURAL = "mini-missiles";
	
	BIO_PLASMABALL_TAG = "plasma ball";
	BIO_PLASMABALL_TAG_PLURAL = "plasma balls";
	
	BIO_BFGBALL_TAG = "ball";
	BIO_BFGBALL_TAG_PLURAL = "balls";

	BIO_NAIL_TAG = "nail";
	BIO_NAIL_TAG_PLURAL = "nails";

	BIO_PROXMINE_TAG = "proximity mine";
	BIO_PROXMINE_TAG_PLURAL = "proximity mines";

	BIO_PROJEXTRA_TAG_BFGRAY = "ray";
	BIO_PROJEXTRA_TAG_BFGRAYS = "rays";

	BIO_PLASMAGLOBULE_TAG = "plasma globule";
	BIO_PLASMAGLOBULE_TAG_PLURAL = "plasma globules";

	BIO_PLASMABOLT_TAG = "plasma bolt";
	BIO_PLASMABOLT_TAG_PLURAL = "plasma bolts";

	BIO_BLACKHOLE_TAG = "black hole";
	BIO_BLACKHOLE_PKUP = "black holes";

	BIO_HDF_ENEMYHEALTHDMG = "\c[White]%.1f%%\c[MidGrey] of enemy health added to damage";
	BIO_HDF_DEMONSLAYER = "\c[White]+%d%% damage\c[MidGrey] to Legendary monsters";

	BIO_PLDF_EXPLODE_SPLASH =
		"\c[MidGrey]Splash: %s%d \c[MidGrey]damage, %s%d \c[MidGrey]radius";
	BIO_PLDF_EXPLODE_SHRAPNEL =
		"\c[MidGrey]Shrapnel: %s%d\c[MidGrey] x %s%d\c[MidGrey] damage";
	BIO_PLDF_BFGSPRAY =
		"\c[MidGrey]%s%d \c[MidGrey]rays, %s%d \cu-\c[MidGrey] %s%d damage";

// Weapon modifiers (summaries, descriptions, incompatibility explanations) ////

	// Incompatibility

	BIO_WMOD_INCOMPAT_TEMPLATE = "\c[White]%s\n\n\c[Yellow]Incompatible:\c[Gold]\n%s";

	BIO_WMOD_INCOMPAT_ALREADYSPOOLING =
		"This weapon already has to spool up to fire.";
	BIO_WMOD_INCOMPAT_AMMOLESS = "This weapon doesn't use ammunition.";
	BIO_WMOD_INCOMPAT_ETMF =
		"This weapon doesn't use ammunition, "
		"doesn't fire real matter, or is "
		"otherwise unsuited to energy-to-matter conversion.";
	BIO_WMOD_INCOMPAT_PROJGRAVITY =
		"This weapon fires no projectiles, "
		"or all its projectiles are already affected by gravity.";
	BIO_WMOD_INCOMPAT_MAGSIZETODAMAGE =
		"This weapon needs either a primary or secondary magazine "
		"that can be reduced by at least 20% and feeds one of its firing modes.";
	BIO_WMOD_INCOMPAT_MINFIRETIMES =
		"This weapon can't fire any faster than it already does.";
	BIO_WMOD_INCOMPAT_MINRELOADTIMES =
		"This weapon can't reload any faster than it already does.";
	BIO_WMOD_INCOMPAT_NODAMAGE = "This weapon deals no damage.";
	BIO_WMOD_INCOMPAT_NOFIRETIMES =
		"This weapon has no modifiable fire timings.";
	BIO_WMOD_INCOMPAT_NOMAGAZINES =
		"This weapon isn't magazine-fed in any way.";
	BIO_WMOD_INCOMPAT_NOMELEEDAMAGE =
		"This weapon is incapable of dealing melee damage.";
	BIO_WMOD_INCOMPAT_NOMUTABLEMAGS =
		"This weapon has no magazines which can be modified.";
	BIO_WMOD_INCOMPAT_NOPIPELINES = "This weapon doesn't fire anything.";
	BIO_WMOD_INCOMPAT_NOPUFFPIPELINES = "This weapon has no hitscan firing modes.";
	BIO_WMOD_INCOMPAT_NORELOADTIMES =
		"This weapon has no modifiable reload timings.";
	BIO_WMOD_INCOMPAT_NOSHELLPAYLOAD = "This weapon doesn't fire shotshells.";
	BIO_WMOD_INCOMPAT_NOSPLASH = "This weapon deals no splash damage.";
	BIO_WMOD_INCOMPAT_NOSPOOL = "This weapon can't be spooled.";
	BIO_WMOD_INCOMPAT_NOSPREAD = "This weapon has no spread at all.";
	BIO_WMOD_INCOMPAT_NOTBFG = "This isn't a BFG-class weapon or similar.";
	BIO_WMOD_INCOMPAT_NOTPLASMARIFLE =
		"This isn't a Plasma Rifle, or a similar type of weapon.";
	BIO_WMOD_INCOMPAT_PAYLOADTOOSMALL =
		"None of this weapon's firing modes emits a large enough payload.";
	BIO_WMOD_INCOMPAT_PROJGRAVITYMOD =
		"This weapon has already been modified to add projectile gravity.";
	BIO_WMOD_INCOMPAT_RESERVEFEED =
		"No valid primary or secondary magazine, or no reserve ammo type.";
	BIO_WMOD_INCOMPAT_SPLASHTOHIT =
		"None of this weapon's fire modes has splash damage "
		"and also allows damage mutation.";
	BIO_WMOD_INCOMPAT_SPMOVERRUN =
		"None of this weapon's firing modes have ammo usage which can be "
		"increased without becoming greater than magazine/ammo capacity.";
	BIO_WMOD_INCOMPAT_SWITCHSPEEDMAX =
		"This weapon already switches as fast as it possibly can.";
	BIO_WMOD_INCOMPAT_TRIVIALHSPREAD = "This weapon has almost no horizontal spread.";
	BIO_WMOD_INCOMPAT_TRIVIALVSPREAD = "This weapon has almost no vertical spread.";

	// Summaries and descriptions
	// (If a grouping has no description, then assume the summary doubles as one)

	BIO_WMOD_BERSERKDAMAGE_SUMM = "\c[Green]250% damage \c[White]dealt after collecting a Berserk Pack";
	BIO_WMOD_BERSERKDAMAGE_DESC = "\c[Green]%d%% damage \c[White]dealt after collecting a Berserk Pack";

	BIO_WMOD_CANISTERSHOT_SUMM =
		"\c[White]Change from firing rockets/grenades to a shot pellet blast\n"
		"\c[White]All splash damage is converted into direct hit damage\n"
		"\c[White]Any pre-existing shrapnel is lost";

	BIO_WMOD_DAMAGEADD_SUMM = "\c[Green]20% of minimum damage added";
	BIO_WMOD_DAMAGEADD_DESC = "\c[White]Damage%s: \c[Green]+%d";

	BIO_WMOD_DEMONSLAYER_SUMM = "\c[Green]+100% damage\c[White] dealt to Legendary monsters";
	BIO_WMOD_DEMONSLAYER_DESC = "\c[Green]+%d%% damage\c[White] dealt to Legendary monsters";

	BIO_WMOD_ETMF_SUMM =
		"\c[White]Change to consuming cells for a few seconds of free firing";
	BIO_WMOD_ETMF_DESC =
		"\c[White]Consumes %d cells for %.1f second(s) of free firing";

	BIO_WMOD_FIRETIME_SUMM = "\c[Green]Increased fire rates";
	BIO_WMOD_FIRETIME_DESC = "\c[White]Fire time%s: \c[Green]%.2f seconds";

	BIO_WMOD_FORCEPAIN_SUMM =
		"\c[Green]Extra 20% chance of firing a neurotoxic payload\n"
		"\c[White]Neurotoxic payloads always make monsters flinch\n"
		"\c[Gold]Some monsters are immune to this effect!";
	BIO_WMOD_FORCEPAIN_DESC =
		"\c[Green]Extra %d%% chance of firing a neurotoxic payload\n"
		"\c[White]Neurotoxic payloads always make monsters flinch\n"
		"\c[Gold]Some monsters are immune to this effect!";

	BIO_WMOD_FORCERADIUSDMG_SUMM =
		"\c[Green]Payloads ignore monster splash damage immunity";

	BIO_WMOD_INFINITEAMMO_SUMM = "\c[Green]Weapon requires and consumes no ammo";

	BIO_WMOD_KICKBACK_SUMM = "\c[Green]+200% knockback";
	BIO_WMOD_KICKBACK_DESC = "\c[Green]+%d%% knockback";

	BIO_WMOD_LIFESTEAL_SUMM = "\c[Green]Small percentage of melee damage dealt gained as health";
	BIO_WMOD_LIFESTEAL_DESC = "\c[Green]%d%% of damage dealt gained as health%s";

	BIO_WMOD_MAGSIZE_SUMM = "\c[Green]Increases magazine capacity";
	BIO_WMOD_MAGSIZE_DESC_1 = "\c[Green]+%d\c[White] primary magazine capacity";
	BIO_WMOD_MAGSIZE_DESC_2 = "\c[Green]+%d\c[White] secondary magazine capacity";

	BIO_WMOD_MAGSIZETODAMAGE_SUMM =
		"\c[Brick]20% reduced magazine size\n"
		"\c[Green]20% increased damage";
	BIO_WMOD_MAGSIZETODAMAGE_DESC_1 =
		"\c[Brick]%d% reduced \c[White]primary magazine size\n"
		"\c[Green]%d%% increased damage \c[White]for applicable firing modes";
	BIO_WMOD_MAGSIZETODAMAGE_DESC_2 =
		"\c[Brick]%d% reduced \c[White]secondary magazine size\n"
		"\c[Green]%d%% increased damage \c[White]for applicable firing modes";

	BIO_WMOD_NTHROUNDCOST_SUMM = "\c[Green]Every 5th shot costs no ammo";
	BIO_WMOD_NTHROUNDCOST_DESC_NTHFREE = "\c[Green]Free shot every %d rounds";
	BIO_WMOD_NTHROUNDCOST_DESC_NTHCOST = "\c[Green]Ammo is only consumed every %d shots";

	BIO_WMOD_PROJGRAVITY_SUMM =
		"\c[White]Projectile payloads are affected by gravity\n"
		"\c[Green]+20% damage to affected projectiles";

	BIO_WMOD_PROXMINE_SUMM =
		"\c[White]Change from firing rockets/grenades to bouncy proximity mines";

	BIO_WMOD_RECHAMBERUP_SUMM =
		"\c[Brick]Double ammo usage\c[White] but \c[Green]double damage";
	BIO_WMOD_RECHAMBERUP_DESC_PIPELINE =
		"\c[White]Damage \c[Green]increased by %d%%";
	BIO_WMOD_RECHAMBERUP_DESC_AMMO1 =
		"\c[White]Primary ammo usage \c[Brick]increased by %d%%";
	BIO_WMOD_RECHAMBERUP_DESC_AMMO2 =
		"\c[White]Secondary ammo usage \c[Brick]increased by %d%%";

	BIO_WMOD_RELOADTIME_SUMM = "\c[Green]Increased reload speeds";
	BIO_WMOD_RELOADTIME_DESC = "\c[White]Reload time%s: \c[Green]%.2f seconds";

	BIO_WMOD_RESERVEFEED_SUMM = "\c[Green]Feeds from reserve instead of magazine";

	BIO_WMOD_SHELLTOSLUG_SUMM = "\c[White]Change from firing shells to solid slugs";

	BIO_WMOD_SMARTAIM_SUMM = "\c[Green]Smart aim functionality";

	BIO_WMOD_SPLASHTOHIT_SUMM =
		"\c[White]Converts 50% of splash damage into hit damage\n"
		"\c[White]50% splash radius reduction per application";
	BIO_WMOD_SPLASHTOHIT_DESC =
		"\c[White]%d damage converted; radius reduced by %d%s";

	BIO_WMOD_SPOOLING_SUMM =
		"\c[Brick]Weapon has to be spooled before firing\n"
		"\c[Green]Dramatic increase in fire rate";
	BIO_WMOD_SPOOLING_DESC =
		"\c[Brick]Weapon has to be spooled before firing";
	BIO_WMOD_SPOOLING_NOBENEFIT =
		"\c[Gold]Note: no fire rate benefit can be gained from this weapon!";

	BIO_WMOD_SPREAD_SUMM =
		"\c[Green]Reduces firing spread";
	BIO_WMOD_SPREAD_DESC =
		"\c[White]Spread%s: "
		"\c[Green]%.2f\c[White] horizontal, "
		"\c[Green]%.2f\c[White] vertical";

	BIO_WMOD_SPREADNARROW_SUMM =
		"\c[White]Converts 50% of horizontal spread into vertical spread";
	BIO_WMOD_SPREADNARROW_DESC =
		"\c[White]Spread%s: "
		"\c[Green]%.2f\c[White] horizontal, "
		"\c[Brick]+%.2f\c[White] vertical";

	BIO_WMOD_SPREADWIDEN_SUMM =
		"\c[White]Converts 50% of vertical spread into horizontal spread";
	BIO_WMOD_SPREADWIDEN_DESC =
		"\c[White]Spread%s: "
		"\c[Brick]+%.2f\c[White] horizontal, "
		"\c[Green]%.2f\c[White] vertical";

	BIO_WMOD_SWITCHSPEED_SUMM =
		"\c[Green]Weapon raises and lowers almost instantly";

// Weapon modifier supports (summaries, incompatibility explanations) //////////

	BIO_MODSUP_INCOMPAT_NONODEEAST = "No node to the east.";
	BIO_MODSUP_INCOMPAT_NOMODEAST = "No modifier in the eastern node.";

	BIO_MODSUP_INCOMPAT_NONODENORTH = "No node to the north.";
	BIO_MODSUP_INCOMPAT_NOMODNORTH = "No modifier in the northern node.";

	BIO_MODSUP_INCOMPAT_NONODESOUTH = "No node to the south.";
	BIO_MODSUP_INCOMPAT_NOMODSOUTH = "No modifier in the southern node.";

	BIO_MODSUP_INCOMPAT_NONODEWEST = "No node to the west.";
	BIO_MODSUP_INCOMPAT_NOMODWEST = "No modifier in the western node.";

	BIO_MODSUP_ADDEAST_SUMM =
		"\c[Green]Modifier in node to east is applied one extra time\n"
		"\c[White]Node does not need to be connected";

	BIO_MODSUP_ADDNORTH_SUMM =
		"\c[Green]Modifier in node to north is applied one extra time\n"
		"\c[White]Node does not need to be connected";

	BIO_MODSUP_ADDSOUTH_SUMM =
		"\c[Green]Modifier in node to south is applied one extra time\n"
		"\c[White]Node does not need to be connected";

	BIO_MODSUP_ADDWEST_SUMM =
		"\c[Green]Modifier in node to west is applied one extra time\n"
		"\c[White]Node does not need to be connected";

// Weapon affixes (descriptions) ///////////////////////////////////////////////

	BIO_WAFX_FORCEPAIN_DESC =
		"\c[Green]Extra %d%% chance of firing a neurotoxic payload\n"
		"\c[White]\tNeurotoxic payloads always make monsters flinch";

// Mutagens (tags, pickup and usage strings) ///////////////////////////////////

	BIO_MUTA_FAIL_NULL = "This weapon doesn't even respond to the mutagen.";
	BIO_MUTA_FAIL_ALREADYMUTATED = "This weapon has already been mutated.";

	BIO_MUTA_GENERAL_TAG = "\c[Cyan]C.O.N.T.R.O.L.\c[White] Mutagen";
	BIO_MUTA_GENERAL_PKUP = "Acquired a sample of \c[Cyan]C.O.N.T.R.O.L.\c- Mutagen.";
	BIO_MUTA_GENERAL_USE = "\c[Cyan]You feel your weapon integrate with your body.\c-";

// Gene items (tags, pickup strings) ///////////////////////////////////////////

	BIO_GENE_TAG = "\c[White]Gene\c-";
	BIO_GENE_PKUP = "Collected a \c[White]gene\c-.";

	// Modifier

	BIO_MGENE_BERSERKDAMAGE_TAG = "\c[MGene]Frenzying\c[White] Gene\c-";
	BIO_MGENE_BERSERKDAMAGE_PKUP = "Collected a %s.";

	BIO_MGENE_CANISTERSHOT_TAG = "\c[MGene]Refit: Canister Shot\c[White] Gene\c-";
	BIO_MGENE_CANISTERSHOT_PKUP = "Collected a %s.";

	BIO_MGENE_DEMONSLAYER_TAG = "\c[MGene]Demonslayer\c[White] Gene\c-";
	BIO_MGENE_DEMONSLAYER_PKUP = "Collected a %s.";

	BIO_MGENE_ETMF_TAG = "\c[MGene]Energy-to-Matter Feed\c[White] Gene\c-";
	BIO_MGENE_ETMF_PKUP = "Collected a %s.";

	BIO_MGENE_FIRETIME_TAG = "\c[MGene]Rapid Refire\c[White] Gene\c-";
	BIO_MGENE_FIRETIME_PKUP = "Collected a %s.";

	BIO_MGENE_FORCEPAIN_TAG = "\c[MGene]Neurotoxic\c[White] Gene\c-";
	BIO_MGENE_FORCEPAIN_PKUP = "Collected a %s.";

	BIO_MGENE_FORCERADIUSDMG_TAG = "\c[MGene]Squash Head\c[White] Gene\c-";
	BIO_MGENE_FORCERADIUSDMG_PKUP = "Collected a %s.";

	BIO_MGENE_INFINITEAMMO_TAG = "\c[MGene]Ammo Apparition\c[White] Gene\c-";
	BIO_MGENE_INFINITEAMMO_PKUP = "Collected an %s.";

	BIO_MGENE_KICKBACK_TAG = "\c[MGene]Stopping\c[White] Gene\c-";
	BIO_MGENE_KICKBACK_PKUP = "Collected a %s.";

	BIO_MGENE_LIFESTEAL_TAG = "\c[MGene]Parasitic\c[White] Gene\c-";
	BIO_MGENE_LIFESTEAL_PKUP = "Collected a %s.";

	BIO_MGENE_MAGSIZE_TAG = "\c[MGene]High-Capacity\c[White] Gene\c-";
	BIO_MGENE_MAGSIZE_PKUP = "Collected a %s.";

	BIO_MGENE_MAGSIZETODAMAGE_TAG = "\c[MGene]Skirmisher\c[White] Gene\c-";
	BIO_MGENE_MAGSIZETODAMAGE_PKUP = "Collected a %s.";

	BIO_MGENE_NTHROUNDCOST_TAG = "\c[MGene]Ammo Thrift\c[White] Gene\c-";
	BIO_MGENE_NTHROUNDCOST_PKUP = "Collected an %s.";

	BIO_MGENE_RELOADTIME_TAG = "\c[MGene]Ergonomic\c[White] Gene\c-";
	BIO_MGENE_RELOADTIME_PKUP = "Collected an %s.";

	BIO_MGENE_PROJGRAVITY_TAG = "\c[MGene]Dense Payload\c[White] Gene\c-";
	BIO_MGENE_PROJGRAVITY_PKUP = "Collected a %s.";

	BIO_MGENE_PROXMINE_TAG = "\c[MGene]Refit: Proximity Mine\c[White] Gene\c-";
	BIO_MGENE_PROXMINE_PKUP = "Collected a %s.";

	BIO_MGENE_RECHAMBERUP_TAG = "\c[MGene]Upscale Rechamber\c[White] Gene\c-";
	BIO_MGENE_RECHAMBERUP_PKUP = "Collected an %s.";

	BIO_MGENE_RESERVEFEED_TAG = "\c[MGene]Ammochain\c[White] Gene\c-";
	BIO_MGENE_RESERVEFEED_PKUP = "Collected an %s.";

	BIO_MGENE_SMARTAIM_TAG = "\c[MGene]Smart Fire Control\c[White] Gene\c-";
	BIO_MGENE_SMARTAIM_PKUP = "Collected a %s.";

	BIO_MGENE_SPLASHTOHIT_TAG = "\c[MGene]Shaped Charge\c[White] Gene\c-";
	BIO_MGENE_SPLASHTOHIT_PKUP = "Collected a %s.";

	BIO_MGENE_SPOOLING_TAG = "\c[MGene]Rotary Turbocharge\c[White] Gene\c-";
	BIO_MGENE_SPOOLING_PKUP = "Collected a %s.";

	BIO_MGENE_SPREAD_TAG = "\c[MGene]Accurised\c[White] Gene\c-";
	BIO_MGENE_SPREAD_PKUP = "Collected an %s.";

	BIO_MGENE_SPREADNARROW_TAG = "\c[MGene]Crab-claw Choke\c[White] Gene\c-";
	BIO_MGENE_SPREADNARROW_PKUP = "Collected a %s.";

	BIO_MGENE_SPREADWIDEN_TAG = "\c[MGene]Duckbill Choke\c[White] Gene\c-";
	BIO_MGENE_SPREADWIDEN_PKUP = "Collected a %s.";

	BIO_MGENE_SHELLTOSLUG_TAG = "\c[MGene]Refit: Slug\c[White] Gene\c-";
	BIO_MGENE_SHELLTOSLUG_PKUP = "Collected a %s.";

	BIO_MGENE_SWITCHSPEED_TAG = "\c[MGene]Speed Sling\c[White] Gene\c-";
	BIO_MGENE_SWITCHSPEED_PKUP = "Collected a %s.";

	// Support

	BIO_SGENE_ADDEAST_TAG = "\c[SGene]E1 Regulator\c[White] Gene\c-";
	BIO_SGENE_ADDEAST_PKUP = "Collected an %s.";

	BIO_SGENE_ADDNORTH_TAG = "\c[SGene]N1 Regulator\c[White] Gene\c-";
	BIO_SGENE_ADDNORTH_PKUP = "Collected an %s.";

	BIO_SGENE_ADDSOUTH_TAG = "\c[SGene]S1 Regulator\c[White] Gene\c-";
	BIO_SGENE_ADDSOUTH_PKUP = "Collected an %s.";

	BIO_SGENE_ADDWEST_TAG = "\c[SGene]W1 Regulator\c[White] Gene\c-";
	BIO_SGENE_ADDWEST_PKUP = "Collected a %s.";

	// Active

	BIO_AGENE_INCOMPAT_EXISTINGSPECIAL = "This weapon already has a special function.";
	BIO_AGENE_INCOMPAT_ALLNEIGHBORSHAVENEIGHBORS =
		"This gene needs at least one of its neighbours to be a dead-end.";

	BIO_AGENE_TOGGLECONNECTED_TAG = "\c[AGene]Overseer\c[White] Gene\c-";
	BIO_AGENE_TOGGLECONNECTED_PKUP = "Collected an %s.";
	BIO_AGENE_TOGGLECONNECTEDSUMM =
		"\c[White]Connected dead-end nodes can be toggled with \c[LightBlue]Zoom\c[White]";

// Weapon morph recipe requirement strings /////////////////////////////////////

	BIO_WMR_REQ_DAMAGEINC_1 = "\c[White]- One hit damage increase";
	BIO_WMR_REQ_FIRETIMEDEC_1 = "\c[White]- One fire rate increase";
	BIO_WMR_REQ_FIRETIMEDEC_2 = "\c[White]- Two fire rate increases";
	BIO_WMR_REQ_FULLGRAPH = "\c[White]- Each node is filled with a gene";
	BIO_WMR_REQ_MAGSIZEINC_1 = "\c[White]- One magazine size increase";
	BIO_WMR_REQ_MAGSIZEINC_2 = "\c[White]- Two magazine size increases";
	BIO_WMR_REQ_RELOADTIMEDEC_1 = "\c[White]- One reload time increase";
	BIO_WMR_REQ_SHOTCOUNTINC_1 = "\c[White]- One shot count increase";
	BIO_WMR_REQ_SPOOLING = "\c[White]- Affected by a %s";
	BIO_WMR_REQ_SPREADDEC_1 = "\c[White]- One spread decrease";

// Miscellaneous actors ////////////////////////////////////////////////////////

	BIO_SUPPLYBOX_TAG = "Supply Box";

// Menu, weapon modification ///////////////////////////////////////////////////

	BIO_MENU_WEAPMOD_UNMUTATED =
		"\c[White]This weapon is unmutated.\n"
		"\c[White]To modify it, use a sample of "
		"\c[Cyan]C.O.N.T.R.O.L.\c[White] mutagen while it's equipped.";
	BIO_MENU_WEAPMOD_HELP_PAN =
		"\c[White]Hold the \c[LightBlue]mouse wheel"
		"\c[White] and \c[LightBlue]move the mouse\c[White] to pan";
	BIO_MENU_WEAPMOD_HELP_MODORDER =
		"\c[White]Modifiers are applied in the order displayed next to their nodes";
	BIO_MENU_WEAPMOD_HELP_HOTKEYS =
		"\c[White]Press \c[LightBlue]e\c[White] to commit changes; "
		"press \c[LightBlue]r\c[White] to revert changes";
	BIO_MENU_WEAPMOD_MUTAGEN =
		"\c[Cyan]C.O.N.T.R.O.L.\c[White] mutagen held: \c[Yellow]%d \c[MidGrey]- "
		"\c[White]Cost to commit: \c[Gold]%d";
	BIO_MENU_WEAPMOD_MORPH =
		"\c[LightBlue]Left click\c[Green] to metamorph this weapon to:\n%s\n\n"
		"\c[Yellow]Requirements fulfilled:\n%s\n\n"
		"\c[White]Cost:\c[Yellow] %d %s\n\n"
		"\c[Gold]Will consume all genes in this tree!";
	BIO_MENU_WEAPMOD_MORPH_QUALITY =
		"\n\n\c[White]New weapon will have \c[Green]%d\c[White] extra node(s)\n"
		"\c[White]Extra nodes will be \c[Green]inherited by future morphs";
	BIO_MENU_WEAPMOD_INACCESSIBLE =
		"\c[Gold]There are no filled nodes connected to this node.";
	BIO_MENU_WEAPMOD_OVERLIMIT_SINGULAR =
		"\c[Gold]Only \c[White]%d\c[Gold] gene of this type can be present at once.";
	BIO_MENU_WEAPMOD_OVERLIMIT_PLURAL =
		"\c[Gold]Only \c[White]%d\c[Gold] genes of this type can be present at once.";
	BIO_MENU_WEAPMOD_COMMITFAIL_MUTACOST =
		"\c[Yellow]Insufficient "
		"\c[Cyan]C.O.N.T.R.O.L.\c[White] mutagen"
		"\c[Yellow] to commit these changes.";
	BIO_MENU_WEAPMOD_MORPHFAIL_MUTACOST =
		"\c[Yellow]Insufficient "
		"\c[Cyan]C.O.N.T.R.O.L.\c[White] mutagen"
		"\c[Yellow] to perform this weapon metamorphosis.";
	BIO_MENU_WEAPMOD_MORPHFAIL_INVALID =
		"\c[Yellow]Metamorphosis isn't possible while any genes are "
		"\c[Brick]incompatible\c[Yellow].";

// Menu, game options //////////////////////////////////////////////////////////

	BIO_OPTTITLE = "\c[Cyan]Biomorph:\c[White] Preferences";

	BIO_OPTCAT_AUDIOVIS = "\c[Green]Audio/Visual Options";
	BIO_OPTCAT_BALANCE = "\c[Green]Balance Options";
	BIO_OPTCAT_CONTROL = "\c[Green]Control Options";
	BIO_OPTCAT_GUI = "\c[Green]HUD Options";
	BIO_OPTCAT_RESET = "\c[Green]Inventory Reset Options";

	BIO_OPTLBL_AUTORELOAD_PRE = "Firing an empty weapon reloads it";
	BIO_OPTLBL_AUTORELOAD_POST = "Auto-reload after emptying magazine";
	BIO_OPTVAL_AUTOREL_ALWAYS = "Always";
	BIO_OPTVAL_AUTOREL_SINGLE = "Single-shot weapons only";
	BIO_OPTVAL_AUTOREL_NEVER = "Never";

	BIO_OPTLBL_BERSERKSWITCH = "Going Berserk switches to Fist";
	BIO_OPTVAL_BSKS_NONE = "Never";
	BIO_OPTVAL_BSKS_MELEE = "Always";
	BIO_OPTVAL_BSKS_FIRSTONLY = "Only on first pickup";

	BIO_OPTLBL_HUDWEAP_OFFSX = "HUD Weapon Info Offset X";
	BIO_OPTLBL_HUDWEAP_OFFSY = "HUD Weapon Info Offset Y";
	BIO_OPTLBL_HUDEXAM_OFFSX = "HUD Examine Info Offset X";
	BIO_OPTLBL_HUDEXAM_OFFSY = "HUD Examine Info Offset Y";

	BIO_OPTLBL_INVBARSLOTS = "HUD Inventory Bar Slots";

	BIO_OPTLBL_LDL = "LegenDoomLite Integration";
	BIO_OPTTIP_LDL =
		"Set what type of loot is dropped by slain Legendary enemies in addition "
		"to generic LegenDoomLite loot.";
	BIO_OPTVAL_LDL_NONE = "Nothing";
	BIO_OPTVAL_LDL_GENE = "Gene(s)";
	BIO_OPTVAL_LDL_WEAP = "Mutated Weapon";

	BIO_OPTLBL_MULTIBARRELFIRE = "Multi-Barrel Fire Mode";
	BIO_OPTVAL_MBF_PRIM = "Primary Fires Multiple Barrels";
	BIO_OPTVAL_MBF_SEC = "Secondary Fires Multiple Barrels";

	BIO_OPTLBL_MULTIRELOADMODE = "Multi-reload mode";
	BIO_OPTVAL_MRM_AUTO = "Continue until interrupted";
	BIO_OPTVAL_MRM_HOLD = "Hold \c[LightBlue]Reload\c[White] to continue";

	BIO_OPTLBL_NOINVCLEAR = "Never Reset Inventory";

	BIO_OPTLBL_RESET_AMMO = "Reset Ammo Every # Maps";
	BIO_OPTLBL_RESET_ARMOR = "Reset Armor Every # Maps";
	BIO_OPTLBL_RESET_HEALTH = "Reset Health Every # Maps";
	BIO_OPTLBL_RESET_WEAPS = "Reset Weapons Every # Maps";

	BIO_OPTLBL_QUAKE = "Screen Shake";

// Keybindings /////////////////////////////////////////////////////////////////

	BIO_UNASSIGNED_KEY = "\c[Gray]Unassigned Key\c-";

	BIO_KB_DROPWEAP = "Drop Weapon";
	BIO_KB_WEAPMODMENU = "Weapon Modification Menu";

// Quit messages ///////////////////////////////////////////////////////////////

	BIO_QUITMSG_EXAMINE =
		"\c[White]Press the \c[LightBlue]Use\c[White] button "
		"on a gear item to gain some general information on it.\c-";
	BIO_QUITMSG_LIFESTEALMAX =
		"\c[White]Lifesteal, like Health Flasks, "
		"gives health up to your maximum plus 100.\c-";
	BIO_QUITMSG_MORPHREQS =
		"\c[White]Requirements to metamorph a weapon vary from one to another. "
		"Try different combinations of genes. Remember that some weapons can "
		"metamorphosize from multiple different bases.\c-";
	BIO_QUITMSG_MULTIBARREL =
		"\c[White]Multi-barrelled weapons like the Coachgun "
		"always allow firing only one barrel "
		"(try your \c[LightBlue]alt-fire\c[White] button).\c-";
	BIO_QUITMSG_SUPPLYBOXES =
		"Stay alert for supply boxes, squirreled away in secret places."
		"Each contains a mutated weapon.";

	BIO_QUITMSG_DRONES =
		"\c[Purple]Please don't go. The drones need you. They look up to you.\c-";

// Miscellaneous ///////////////////////////////////////////////////////////////

	BIO_ALLFOUR = "all four";
	BIO_CHARGE = "charge";
	BIO_COOLDOWN = "cooldown";
	BIO_FIRE = "fire";
	BIO_SWING = "swing";
	BIO_RIGHT = "right";
	BIO_LEFT = "left";
	BIO_SLOW = "slow";
	BIO_PER2ROUNDS = "per 2 rounds";
	BIO_SPOOLUP = "spoolup";
	BIO_SPOOLED = "spooled";
	BIO_SPOOLDOWN = "spooldown";
	BIO_TWO = "two";

	BIO_WEAPDROP_CONFIRM = "Press \cn%s\c- again to drop this weapon.";

	BIO_PRIMARYQUALIFIER = "\c[White](\c[Yellow]Primary\c[White])";
	BIO_SECONDARYQUALIFIER = "\c[White](\c[Yellow]Secondary\c[White])";

	BIO_MONSTERCOUNTERCHAR = "M";
	BIO_SECRETCOUNTERCHAR = "S";
	
	DOSY = "\c[Red](\c[White]Press \c[LightBlue]Y\c[White] to quit\c[Red])\c-";
