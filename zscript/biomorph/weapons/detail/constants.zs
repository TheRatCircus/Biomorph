enum BIO_WeaponFlags : uint16
{
	BIO_WF_NONE = 0,
	BIO_WF_CORRUPTED = 1 << 0,
	BIO_WF_AFFIXESHIDDEN = 1 << 1, // Caused by corruption
	BIO_WF_ONEHANDED = 1 << 2,
	BIO_WF_PISTOL = 1 << 3,
	// The following 3 are applicable only to dual-wielded weapons
	BIO_WF_NOAUTOPRIMARY = 1 << 13,
	BIO_WF_NOAUTOSECONDARY = 1 << 14,
	BIO_WF_AKIMBORELOAD = 1 << 15,
	BIO_WF_ALL = uint16.MAX
}

/*	Dictate what stats can be affected by affixes. If a bit is set,
	the affix should stop itself from altering that stat, or applying itself
	to a weapon which it can't even affect.
*/
enum BIO_WeaponAffixMask : uint
{
	BIO_WAM_NONE = 0,
	BIO_WAM_BIOFLAGS = 1 << 0,
	BIO_WAM_RAISESPEED = 1 << 1,
	BIO_WAM_LOWERSPEED = 1 << 2,
	BIO_WAM_SWITCHSPEED = BIO_WAM_RAISESPEED | BIO_WAM_LOWERSPEED,
	BIO_WAM_KICKBACK = 1 << 3,
	BIO_WAM_FIRETIME = 1 << 4,
	BIO_WAM_RELOADTIME = 1 << 5,
	BIO_WAM_AMMOTYPE_1 = 1 << 6,
	BIO_WAM_AMMOTYPE_2 = 1 << 7,
	BIO_WAM_AMMOTYPE = BIO_WAM_AMMOTYPE_1 | BIO_WAM_AMMOTYPE_2,
	BIO_WAM_AMMOUSE_1 = 1 << 8,
	BIO_WAM_AMMOUSE_2 = 1 << 9,
	BIO_WAM_AMMOUSE = BIO_WAM_AMMOUSE_1 | BIO_WAM_AMMOUSE_2,
	BIO_WAM_MAGSIZE_1 = 1 << 10,
	BIO_WAM_MAGSIZE_2 = 1 << 11,
	BIO_WAM_MAGSIZE = BIO_WAM_MAGSIZE_1 | BIO_WAM_MAGSIZE_2, 
	BIO_WAM_MAGTYPE_1 = 1 << 12,
	BIO_WAM_MAGTYPE_2 = 1 << 13,
	BIO_WAM_MAGTYPE = BIO_WAM_MAGTYPE_1 | BIO_WAM_MAGTYPE_2,
	BIO_WAM_RELOADCOST_1 = 1 << 14,
	BIO_WAM_RELOADCOST_2 = 1 << 15,
	BIO_WAM_RELOADCOST = BIO_WAM_RELOADCOST_1 | BIO_WAM_RELOADCOST_2,
	BIO_WAM_RELOADOUTPUT_1 = 1 << 16,
	BIO_WAM_RELOADOUTPUT_2 = 1 << 17,
	BIO_WAM_RELOADOUTPUT = BIO_WAM_RELOADOUTPUT_1 | BIO_WAM_RELOADOUTPUT_2, 
	BIO_WAM_MAGAZINELESS = BIO_WAM_RELOADTIME | BIO_WAM_MAGSIZE |
		BIO_WAM_MAGTYPE | BIO_WAM_RELOADCOST | BIO_WAM_RELOADOUTPUT,
	BIO_WAM_AMMOLESS = BIO_WAM_AMMOTYPE | BIO_WAM_AMMOUSE |  BIO_WAM_MAGAZINELESS,
	BIO_WAM_ALL = uint8.MAX
}

extend class BIO_Weapon
{
	const MAGAZINE_MAXAMOUNT = uint16.MAX;
	const DEFAULT_MAX_AFFIXES = 6;

	// `SelectionOrder` is for when ammo runs out; lower number, higher priority

	const SELORDER_PLASRIFLE = 100;
	const SELORDER_PLASRIFLE_SURP = SELORDER_PLASRIFLE + 20;
	const SELORDER_PLASRIFLE_SPEC = SELORDER_PLASRIFLE - 20;
	const SELORDER_PLASRIFLE_CLSF = SELORDER_PLASRIFLE - 40;

	const SELORDER_SSG = 400;
	const SELORDER_SSG_SURP = SELORDER_SSG + 20;
	const SELORDER_SSG_SPEC = SELORDER_SSG - 20;
	const SELORDER_SSG_CLSF = SELORDER_SSG - 40;

	const SELORDER_CHAINGUN = 700;
	const SELORDER_CHAINGUN_SURP = SELORDER_CHAINGUN + 20;
	const SELORDER_CHAINGUN_SPEC = SELORDER_CHAINGUN - 20;
	const SELORDER_CHAINGUN_CLSF = SELORDER_CHAINGUN - 40;

	const SELORDER_SHOTGUN = 1300;
	const SELORDER_SHOTGUN_SURP = SELORDER_SHOTGUN + 20;
	const SELORDER_SHOTGUN_SPEC = SELORDER_SHOTGUN - 20;
	const SELORDER_SHOTGUN_CLSF = SELORDER_SHOTGUN - 40;

	const SELORDER_PISTOL = 1900;
	const SELORDER_PISTOL_SURP = SELORDER_PISTOL + 20;
	const SELORDER_PISTOL_SPEC = SELORDER_PISTOL - 20;
	const SELORDER_PISTOL_CLSF = SELORDER_PISTOL - 40;

	const SELORDER_CHAINSAW = 2200;
	const SELORDER_CHAINSAW_SURP = SELORDER_CHAINSAW + 20;
	const SELORDER_CHAINSAW_SPEC = SELORDER_CHAINSAW - 20;
	const SELORDER_CHAINSAW_CLSF = SELORDER_CHAINSAW - 40;

	const SELORDER_RLAUNCHER = 2500;
	const SELORDER_RLAUNCHER_SURP = SELORDER_RLAUNCHER + 20;
	const SELORDER_RLAUNCHER_SPEC = SELORDER_RLAUNCHER - 20;
	const SELORDER_RLAUNCHER_CLSF = SELORDER_RLAUNCHER - 40;

	const SELORDER_BFG = 2800;
	const SELORDER_BFG_SURP = SELORDER_BFG + 20;
	const SELORDER_BFG_SPEC = SELORDER_BFG - 20;
	const SELORDER_BFG_CLSF = SELORDER_BFG - 40;

	const SELORDER_FIST = 3700;

	// `SlotPriority` is for manual selection; higher number, higher priority

	const SLOTPRIO_MAX = 1.0;

	const SLOTPRIO_CLASSIFIED_UNIQUE = SLOTPRIO_CLASSIFIED + 0.1;
	const SLOTPRIO_CLASSIFIED = 0.8;

	const SLOTPRIO_SPECIALTY_UNIQUE = SLOTPRIO_SPECIALTY + 0.1;
	const SLOTPRIO_SPECIALTY = 0.6;

	const SLOTPRIO_STANDARD_UNIQUE = SLOTPRIO_STANDARD + 0.1;
	const SLOTPRIO_STANDARD = 0.4;

	const SLOTPRIO_SURPLUS_UNIQUE = SLOTPRIO_SURPLUS + 0.1;
	const SLOTPRIO_SURPLUS = 0.2;

	const SLOTPRIO_MIN = 0.0;

	// (RAT: Who designed those two properties to be so counter-intuitive?)

	static const name MUTATED_SPAWN_TRANS[] = {
		'',
		'BIO_Mutated_1',
		'BIO_Mutated_2',
		'BIO_Mutated_3',
		'BIO_Mutated_4',
		'BIO_Mutated_5',
		'BIO_Mutated_6'
	};

	static const string CATEGORY_IDS[] = {
		"melee",
		"pistol",
		"shotgun",
		"ssg",
		"rifle",
		"autogun",
		"launcher",
		"energy",
		"super"
	};
}

enum BIO_WeaponCategory : uint8 
{
	// Common
	BIO_WEAPCAT_SHOTGUN,
	BIO_WEAPCAT_RIFLE,
	BIO_WEAPCAT_AUTOGUN,
	// Uncommon
	BIO_WEAPCAT_MELEE,
	BIO_WEAPCAT_PISTOL,
	BIO_WEAPCAT_SSG,
	BIO_WEAPCAT_LAUNCHER,
	BIO_WEAPCAT_ENERGY,
	BIO_WEAPCAT_SUPER,
	__BIO_WEAPCAT_COUNT__
}
